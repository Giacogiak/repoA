name: Build and Deploy to RepoB

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-2019  # or windows-2019 if you want Visual Studio 2019
    steps:
      - name: Checkout repoA
        uses: actions/checkout@v3
      
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.config') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: '16.0'  # Use Visual Studio 2019 (version 16.0)

      - name: Restore NuGet Packages
        run: nuget restore CSharp-TuT.sln

      - name: Build with MSBuild
        run: |
          msbuild.exe CSharp-TuT.sln /p:platform="Any CPU" /p:configuration="Release"
      
      - name: Find DLL and PDB files
        id: find-files
        run: |
          $files = Get-ChildItem -Recurse -Path . -Include *.dll, *.pdb | Where-Object { $_.FullName -like "*bin\Release\*" }
          if ($files) {
            $filePaths = $files | ForEach-Object { $_.FullName }
            Write-Output "Found files: $($filePaths -join ', ')"
            echo "filePaths=$($filePaths -join '|')" >> $GITHUB_OUTPUT} 
            else {Write-Output "No .dll or .pdb files found in bin\Release"}

      - name: Checkout RepoB
        uses: actions/checkout@v3
        with:
          repository: Giacogiak/RepoB
          token: ${{ secrets.REPOB_PAT }}
          path: RepoB

      - name: Copy DLL and PDB files to repoB/plugins
        run: |
          if ("${{ steps.find-files.outputs.filePaths }}") {
            $filePaths = "${{ steps.find-files.outputs.filePaths }}" -split '\|'
            foreach ($filePath in $filePaths) {
              Copy-Item -Path $filePath -Destination "RepoB/plugins/"
            }
          } else {
            Write-Output "No files to copy."
          }

      - name: Commit and Push to RepoB
        run: |
          cd RepoB
          git config --global user.email "forcina.giacomo@gmail.com"
          git config --global user.name "Giacogiak"
          git add .
          git commit -m "Auto-update DLLs and PDBs from RepoA" || echo "No changes to commit"
          git push
        shell: pwsh